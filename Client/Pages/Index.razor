@page "/"
@using PizzaPlace.Shared
@inject IMenuService menuService
@inject IOrderService orderService
@inject State State
@inject NavigationManager NavigationManager

<!--Menu-->

<PizzaList Title="Our selection of pizzas" Menu="@State.Menu" Selected="((pizza)=>AddToBasket(pizza))" ShowPizzaInformation="((pizza)=>ShowPizzaInformation(pizza))"/>

<!--End Menu-->
<!--Shoping Basket-->
<ShoppingBasket Title="Your current order" Basket="@State.Basket" GetPizzaFromId="State.Menu.GetPizza"
                Selected="(pos=>RemoveFromBasket(pos))"/>
<!--End shoping basket-->
<!--Customer entry-->
<CustomerEntry Title="Please enter your details below" Customer="State.Basket.Customer" Submit="@(async (_)=>await PlaceOrder())" />
<!--End customer entry-->
<p>@State.ToJson()</p>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

@code{
    //private State State { get; } = new State();

    protected override async Task OnInitializedAsync()
    {
        State.Menu = await menuService.GetMenu();
        this.State.Basket.Customer.PropertyChanged +=
        (sender, e) => this.StateHasChanged();
    }

    private string SpicinessImage(Spiciness spiciness)
    {
        return $"images/{spiciness.ToString().ToLower()}.png";
    }

    private void AddToBasket(Pizza pizza)
    {
        Console.WriteLine($"Added pizza {pizza.Name}");
        State.Basket.Add(pizza.Id);
        StateHasChanged();
    }

    private void RemoveFromBasket(int pos)
    {
        Console.WriteLine($"Removing pizza at pos {pos}");
        State.Basket.RemoveAt(pos);
        StateHasChanged();
    }

    private async Task PlaceOrder()
    {
        await orderService.PlaceOrder(State.Basket);
    }

    private void ShowPizzaInformation(Pizza pizza)
    {
        State.CurrentPizza = pizza;
        NavigationManager.NavigateTo("/PizzaInfo");
    }
}
